install.packages = sml
install.packages = xml
install.packages("XML")
library(XML)
http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country=ALL&state=NONE&returnType=TABLE
http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country=ALL&state=NONE&returnType=TABLE
http:/adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country=ALL&state=NONE&returnType=TABLE
http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country=ALL&state=NONE&returnType=TABLE
"http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country=ALL&state=NONE&returnType=TABLE"
readHTMLTalbe(url)
readHTMLTable(url)
readHTMLTable(url)
url
url = "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country=ALL&state=NONE&returnType=TABLE"
url
readHTMLTalbe(url)
readHTMLTable(url)
russia <- readHTMLTable(url)
data.frame(russia)
russia <- data.frame(russia)
data.frame
readHTMLTable(url)
russia <- data.frame(russia)
head(russia)
colnames(russia) <- c("year", "adoptions")
russia
plot(russia$year)
plot(russia$adoptions)
class(russia$adoptions)
as.numeric(russia$adoptions)
as.numeric(as.character(russia$adoptions))
russia$year <- as.numeric(as.character(russia$year))
plot(russia)
plot(russia$year, russia$adoptions)
barplot(russia$year, russia$adoptions)
barplot(russia$adoptions)
plot(russia$year, russia$adoptions)
class(russia$year)
class(russia$adoptions)
russia$adoptions <- as.numeric(as.character(russia$adoptions))
plot(russia$year, russia$adoptions)
url
url
get_country_data <- function(country_name) {
# first part of the url
first_part <- "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country="
#last part of the url
last_part <- "&state=NONE&returnType=TABLE"
#get the url for any country
url <- paste(first_part, country_name, last_part, sep = "")
#fetch it from the internet
this_country <- readHTMLTable(url)
#cast it as a datra frame
this_country <- data.frame(this_country)
#rename the columns
colnames(this_country) <- c("year", "adoptions")
return (this_country)
}
get_country_data("CANADA")
plot(year$canada, adoptions$canada)
plot(data$year, data$adoptions)
get_country_data("US")
get_country_data("GERMANY")
get_country_data <- function(country_name) {
# first part of the url
first_part <- "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country="
#last part of the url
last_part <- "&state=NONE&returnType=TABLE"
#get the url for any country
url <- paste(first_part, country_name, last_part, sep = "")
#fetch it from the internet
this_country <- readHTMLTable(url)
#cast it as a data frame
this_country <- data.frame(this_country)
#rename the columns
colnames(this_country) <- c("year", "adoptions")
#sorry, there are factors
this_country$year <- as.numeric(as.character(this_country$year))
this_country$adoptions <- as.numeric(as.character(this_country$adoptions))
return (this_country)
}
get_country_name(SPAIN)
get_country_data(SPAIN)
get_country_data(GERMANY)
this_country
country_name
get_country_data <- function(country_name) {
+
+     # first part of the url
+     first_part <- "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country="
+
+     #last part of the url
+     last_part <- "&state=NONE&returnType=TABLE"
+
+     #get the url for any country
+     url <- paste(first_part, country_name, last_part, sep = "")
+
+     #fetch it from the internet
+     this_country <- readHTMLTable(url)
+
+     #cast it as a datra frame
+     this_country <- data.frame(this_country)
+
+     #rename the columns
+     colnames(this_country) <- c("year", "adoptions")
+
+     return (this_country)
+
+ }
get_country_data <- function(country_name) {
# first part of the url
first_part <- "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country="
#last part of the url
last_part <- "&state=NONE&returnType=TABLE"
#get the url for any country
url <- paste(first_part, country_name, last_part, sep = "")
#fetch it from the internet
this_country <- readHTMLTable(url)
#cast it as a data frame
this_country <- data.frame(this_country)
#rename the columns
colnames(this_country) <- c("year", "adoptions")
#sorry, there are factors
this_country$year <- as.numeric(as.character(this_country$year))
this_country$adoptions <- as.numeric(as.character(this_country$adoptions))
return (this_country)
}
get_country_data("GERMANY")
this_country$country <- country_name
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
get_country_data <- function(country_name) {
# first part of the url
first_part <- "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country="
#last part of the url
last_part <- "&state=NONE&returnType=TABLE"
#get the url for any country
url <- paste(first_part, country_name, last_part, sep = "")
#fetch it from the internet
this_country <- readHTMLTable(url)
#cast it as a data frame
this_country <- data.frame(this_country)
#rename the columns
colnames(this_country) <- c("year", "adoptions")
#sorry, there are factors
this_country$year <- as.numeric(as.character(this_country$year))
this_country$adoptions <- as.numeric(as.character(this_country$adoptions))
this_country$country <- country_name
return (this_country)
}
countries <- c("GERMANY", "CHINA", "GUATEMALA", "RUSSIA", "CANADA", "MEXICO")
all_countries <- NULL
for (i in all_countries){}
all_countries <- NULL
i <- MEXICO
countries
countries <- c("GERMANY", "CHINA", "GUATEMALA", "RUSSIA", "CANADA", "MEXICO")
all_countries <- NULL
for (i in countries) {
print(i)
this_country <- get_country_data(i)
all_countries <- rbind(this_country, all_countries)
}
countries
MEXICO
"MEXICO"
i
moo <- "Burkina Faso"
gsub(" ", "+", moo)
moo <- "Canada"
gsub(" ", "+", moo)
country_name <- gsub(" ", "+", country_name)
country_name <- gsub(" ", "+", country_name)
get_country_data <- function(country_name) {
country_name <- gsub(" ", "+", country_name)
# first part of the url
first_part <- "http://adoption.state.gov/maps/statistics/map_files/statistics.php?special=NONE&year=ALL&country="
#last part of the url
last_part <- "&state=NONE&returnType=TABLE"
#get the url for any country
url <- paste(first_part, country_name, last_part, sep = "")
#fetch it from the internet
this_country <- readHTMLTable(url)
#cast it as a data frame
this_country <- data.frame(this_country)
#rename the columns
colnames(this_country) <- c("year", "adoptions")
#sorry, there are factors
this_country$year <- as.numeric(as.character(this_country$year))
this_country$adoptions <- as.numeric(as.character(this_country$adoptions))
this_country$country <- country_name
return (this_country)
}
return (this_country)
data <- read.delim("countries")
data <- read.delim("countries.csv")
setwd("~/Users/angelhartwi/dataviz-fall-2013/dataviz-r")
setwd("~/dataviz-fall-2013/dataviz-r")
data <- read.delim("countries.csv")
get_country_data
data <- read.delim("countries.csv")
data
data
read(data)
data
get_country_data(data)
get_country_data(data)
countries
data
